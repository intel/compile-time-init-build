name: Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Debug

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          # test the generated single header
          - name: clang-14
            single_header: 1
            install: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 14
            cc: " /usr/lib/llvm-14/bin/clang"
            cxx: "/usr/lib/llvm-14/bin/clang++"
          - name: gcc-11
            single_header: 1
            install: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt update && sudo apt-get install -y gcc-11 g++-11
            cc: "/usr/bin/gcc-11"
            cxx: "/usr/bin/g++-11"

          # test c++20 build
          - name: clang-14
            cxx_standard: 20
            install: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 14
            cc: " /usr/lib/llvm-14/bin/clang"
            cxx: "/usr/lib/llvm-14/bin/clang++"
          - name: clang-13
            cxx_standard: 20
            install: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 13
            cc: " /usr/lib/llvm-13/bin/clang"
            cxx: "/usr/lib/llvm-13/bin/clang++"
          - name: clang-12
            cxx_standard: 20
            install: sudo apt update && sudo apt-get install -y clang-12
            cc: " /usr/lib/llvm-12/bin/clang"
            cxx: "/usr/lib/llvm-12/bin/clang++"
          - name: clang-11
            cxx_standard: 20
            install: sudo apt update && sudo apt-get install -y clang-11
            cc: " /usr/lib/llvm-11/bin/clang"
            cxx: "/usr/lib/llvm-11/bin/clang++"
          - name: gcc-11
            cxx_standard: 20
            install: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt update && sudo apt-get install -y gcc-11 g++-11
            cc: "/usr/bin/gcc-11"
            cxx: "/usr/bin/g++-11"
          - name: gcc-10
            cxx_standard: 20
            install: sudo apt update && sudo apt-get install -y gcc-10
            cc: "/usr/bin/gcc-10"
            cxx: "/usr/bin/g++-10"

          # test c++17 build
          - name: clang-14
            install: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 14
            cc: " /usr/lib/llvm-14/bin/clang"
            cxx: "/usr/lib/llvm-14/bin/clang++"
          - name: clang-13
            install: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 13
            cc: " /usr/lib/llvm-13/bin/clang"
            cxx: "/usr/lib/llvm-13/bin/clang++"
          - name: clang-12
            install: sudo apt update && sudo apt-get install -y clang-12
            cc: " /usr/lib/llvm-12/bin/clang"
            cxx: "/usr/lib/llvm-12/bin/clang++"
          - name: clang-11
            install: sudo apt update && sudo apt-get install -y clang-11
            cc: " /usr/lib/llvm-11/bin/clang"
            cxx: "/usr/lib/llvm-11/bin/clang++"
          - name: clang-10
            install: sudo apt update && sudo apt-get install -y clang-10
            cc: " /usr/lib/llvm-10/bin/clang"
            cxx: "/usr/lib/llvm-10/bin/clang++"
          - name: clang-9
            install: sudo apt update && sudo apt-get install -y clang-9
            cc: " /usr/lib/llvm-9/bin/clang"
            cxx: "/usr/lib/llvm-9/bin/clang++"
          - name: clang-8
            install: sudo apt update && sudo apt-get install -y clang-8
            cc: " /usr/lib/llvm-8/bin/clang"
            cxx: "/usr/lib/llvm-8/bin/clang++"
          - name: clang-7
            install: sudo apt update && sudo apt-get install -y clang-7
            cc: " /usr/lib/llvm-7/bin/clang"
            cxx: "/usr/lib/llvm-7/bin/clang++"

          - name: gcc-11
            install: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt update && sudo apt-get install -y gcc-11 g++-11
            cc: "/usr/bin/gcc-11"
            cxx: "/usr/bin/g++-11"
          - name: gcc-10
            install: sudo apt update && sudo apt-get install -y gcc-10
            cc: "/usr/bin/gcc-10"
            cxx: "/usr/bin/g++-10"
          - name: gcc-9
            install: sudo apt update && sudo apt-get install -y gcc-9
            cc: "/usr/bin/gcc-9"
            cxx: "/usr/bin/g++-9"
          
    steps:
      - uses: actions/checkout@v3

      - name: install compiler
        run: ${{ matrix.compiler.install }}

      - name: Configure CMake
        env:
          CC: ${{ matrix.compiler.cc }}
          CXX: ${{ matrix.compiler.cxx }}
          SINGLE_HEADER: ${{ matrix.compiler.single_header }}
          CXX_STANDARD: ${{ matrix.compiler.cxx_standard }}
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build Unit Tests
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -t all-cib-tests

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

  quality_checks_pass:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install compiler
        run: sudo apt update && sudo apt-get install -y clang-11

      - name: Install cmake-format
        run: |
          pip3 install --upgrade pip
          pip3 install pyyaml cmake-format

      - name: Configure CMake
        env:
          CC: "/usr/lib/llvm-11/bin/clang"
          CXX: "/usr/lib/llvm-11/bin/clang++"
          CXX_STANDARD: 20
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Run quality checks
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -t quality

  build_single_header:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target release_header

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: cib.hpp
          path: ${{github.workspace}}/build/include/cib/cib.hpp

