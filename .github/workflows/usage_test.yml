name: Usage Test
permissions: read-all

on:
  workflow_dispatch:
  merge_group:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DEBIAN_FRONTEND: noninteractive
  CMAKE_GENERATOR: Ninja
  USER_CMAKE_VERSION: 3.25

jobs:
  usage_test:
    runs-on: ${{ github.repository_owner == 'intel' && 'intel-' || '' }}ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        cpp_implementation: [FREESTANDING, HOSTED]
        compiler: [clang, gcc]
        include:
          - compiler: clang
            cc: "clang"
            cxx: "clang++"
            install: sudo apt update && sudo apt install -y clang-14
            toolchain_root: "/usr/lib/llvm-14"
          - compiler: gcc
            cc: "gcc-12"
            cxx: "g++-12"
            install: sudo apt update && sudo apt install -y gcc-12 g++-12
            toolchain_root: "/usr"

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install compiler
        run: |
          ${{ matrix.install }}
          sudo apt install -y ninja-build

      - name: Install cmake
        run: |
          pip3 install --upgrade pip
          pip3 install --force cmake==${{env.USER_CMAKE_VERSION}}

      - name: Configure CMake
        env:
          CC: ${{matrix.toolchain_root}}/bin/${{matrix.cc}}
          CXX: ${{matrix.toolchain_root}}/bin/${{matrix.cxx}}
        working-directory: ${{github.workspace}}/usage_test
        run: ~/.local/bin/cmake -B build -DCPP_IMPLEMENTATION=${{matrix.cpp_implementation}}

      - name: Build
        working-directory: ${{github.workspace}}/usage_test
        run: ~/.local/bin/cmake --build build
